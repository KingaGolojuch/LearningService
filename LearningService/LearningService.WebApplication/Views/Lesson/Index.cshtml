@model LearningService.WebApplication.Models.Lesson.LessonCourseContainerViewModel

@{
    ViewBag.Title = "Lekcje";
}

<h2>Lekcje z kursu @Model.Course.Name</h2>

<p>@Html.ActionLink("Dodaj teorie", "CreateTheory", new { @courseId = Model.Course.Id })</p>
<p>@Html.ActionLink("Dodaj test teoretyczny", "CreateTheoryExam", new { @courseId = Model.Course.Id })</p>
<p>@Html.ActionLink("Dodaj test praktyczny", "CreatePracticalExam", new { @courseId = Model.Course.Id })</p>

<table class="table">
    <tr>
        <th>@Html.DisplayNameFor(model => model.Lessons.FirstOrDefault().Headline)</th>
        <th>@Html.DisplayNameFor(model => model.Lessons.FirstOrDefault().OrderLesson)</th>
        <th></th>
    </tr>

@foreach (var item in Model.Lessons.OrderBy(x => x.OrderLesson)) {
    <tr>
        <td>@Html.DisplayFor(modelItem => item.Headline)</td>
        <td>
            @if (Model.Lessons.First().Id != item.Id)
            {
                @Html.ActionLink("Na wcześniejszą", "ChangeOrder", new { lessonId = item.Id, orderDown = false })
            }

            @if (Model.Lessons.Last().Id != item.Id)
            {
                @Html.ActionLink("Na późniejszą", "ChangeOrder", new { lessonId = item.Id, orderDown = true })
            }
        </td>
        <td>
            @Html.ActionLink("Edycja", "Edit", new { lessonId = item.Id })
        </td>
    </tr>
}

</table>
