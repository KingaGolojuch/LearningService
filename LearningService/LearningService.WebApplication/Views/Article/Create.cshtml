@model LearningService.WebApplication.Models.Article.ArticleBaseViewModel

@{
    ViewBag.Title = "Tworzenie artykułu";
}

<h2>Tworzenie artykułu</h2>

@using (Html.BeginForm("Create", "Article", FormMethod.Post))
{
    @Html.AntiForgeryToken()
    <div class="form-input-full-width">
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })

        <div class="form-group">
            @Html.LabelFor(model => model.Headline, new { @class = "control-label" })
            @Html.TextBoxFor(model => model.Headline, new { @class = "form-control" })
            @Html.ValidationMessageFor(model => model.Headline, "", new { @class = "text-danger" })
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.ContentShortened, new { @class = "control-label" })
            @Html.TextBoxFor(model => model.ContentShortened, new { @class = "form-control" })
            @Html.ValidationMessageFor(model => model.ContentShortened, "", new { @class = "text-danger" })
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.ContentArticle, new { @class = "control-label" })
            @Html.TextAreaFor(model => model.ContentArticle, new { @id = "newArticleArea", @class = "form-control", @row = 5 })
            @Html.ValidationMessageFor(model => model.ContentArticle, "", new { @class = "text-danger" })
        </div>
        <div class="form-group">
            <input type="submit" class="btn btn-success" value="Zapisz" />
        </div>
    </div>
}

<div>
    @Html.ActionLink("Powrót", "Index", null, new { @class = "btn btn-default" })
</div>

@section scripts {
    @Scripts.Render("~/bundles/jqueryval")
    <script>
        (function ($) {
            function HomeIndex() {
                var $this = this;

                function initialize() {
                    $('#newArticleArea').summernote({
                        focus: true,
                        height: 150,
                        tabSize: 4,
                        tabDisable: true,
                        codemirror: {
                            theme: 'united'
                        },
                        toolbar: [
                            ['style', ['bold', 'italic', 'underline', 'clear']],
                            ['font', ['superscript', 'subscript']],
                            ['color', ['color']],
                            ['style', ['style']],
                            ['table', ['table']],
                            ['para', ['ul', 'ol', 'paragraph']],
                            ['insert', ['link']]
                        ],
                        styleTags: [
                            'p',
                            { title: 'Blockquote', tag: 'blockquote', className: 'blockquote', value: 'blockquote' },
                            'pre', 'h1', 'h2', 'h3', 'h4', 'h5', 'h6'
                        ]
                    });
                }

                $this.init = function () {
                    initialize();
                }
            }
            $(function () {
                var self = new HomeIndex();
                self.init();
            })
        })(jQuery);
    </script>
}
